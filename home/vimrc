set nocompatible
set incsearch
set showcmd
set autoindent
" set smartindent
set cindent
set smarttab
set ignorecase
set smartcase
set ttyfast
if &t_Co > 2 || has("gui_running")
	syntax on
	" set nohls
	set hls
endif
set et sw=4 ts=4
set ofu=syntaxcomplete#Complete
set completeopt=longest,menuone
" highlight Pmenu guibg=brown gui=bold
" highlight Pmenu ctermbg=238 gui=bold
"
"
"
" REQUIRED. This makes vim invoke latex-suite when you open a tex file.
filetype plugin on

" IMPORTANT: grep will sometimes skip displaying the file name if you
" search in a single file. This will confuse latex-suite. Set your grep
" program to alway generate a file-name.
" set grepprg=grep\ -nH\ $*

" OPTIONAL: This enables automatic indentation as you type.
filetype indent on

set directory=~/.vim_swap
set backupdir=~/.vim_swap
set wildmenu
set wildmode=list:longest

set scrolloff=3

" set shortmess=atI

nnoremap <silent> <F8> :TlistToggle<CR>

map <F2> :NERDTreeToggle<CR>

nmap ;; :w<CR>

let mapleader = ","

set background=dark
" colors peaksea

ab #d #define
ab #i #include
ab #b /***********************************************
ab #l /*---------------------------------------------*/
ab #e <space>***********************************************/
ab #e <space>***********************************************/

map ,c, <esc><up>o/***********************************************<cr><space>*<cr>*<esc>JA<cr>*<cr>***********************************************/<up><up><up>

map Y y$

let NERDShutUp = 1
let NERDSpaceDelims = 1

" let rtm_api_key='4b73f0d3e253f76250f37be76c5f8198'
" let rtm_shared_secret='b61fa8797e986992'

set viminfo='100,f0

" let g:SuperTabDefaultCompletionType = "context"
let g:SuperTabDefaultCompletionType = "context"
let g:SuperTabDefaultCompletionType = "<c-x><c-o>"
let g:SuperTabContextDefaultCompletionType = "<c-x><c-o>"

" au BufWinLeave *.* mkview
" au BufWinEnter *.* silent loadview

autocmd BufRead *.py set smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class
autocmd BufWritePre *.py normal m`:%s/\s\+$//e ``
autocmd FileType python set ts=4 et sw=4
autocmd FileType python set foldmethod=indent
autocmd FileType python set foldlevel=2
autocmd FileType python set updatetime=500
" autocmd FileType python compiler pylint
" au BufWritePost *.py !pyflakes % 
" autocmd FileType python nnoremap <silent> <F10> :!pyflakes %<CR>
autocmd FileType python nnoremap <silent><buffer><leader>pr :w! <cr> :!python %<cr>
autocmd FileType python nnoremap <silent><buffer><leader>pf :!pyflakes %<cr>
autocmd FileType python nnoremap <silent><buffer><leader>pl :!pylint %<cr>

autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd FileType c set omnifunc=ccomplete#Complete

autocmd FileType lilypond nnoremap <silent><buffer><leader>ll :w! <cr> :!lilypond %<cr>
autocmd FileType lilypond nnoremap <silent><buffer><leader>lv :!evince %:r.pdf &<cr>

autocmd FileType c nnoremap <silent><buffer><leader>m :make<cr>

"Set the error format for javac to be this thing
"Use :help errorformat-javac for info
autocmd BufWritePre *.java normal m`:%s/\s\+$//e ``
autocmd FileType java set efm=%A%f:%l:\ %m,%+Z%p^,%+C%.%#,%-G%.%#
autocmd FileType java set ts=4 noexpandtab sw=4
" autocmd FileType java nnoremap <silent><buffer><leader>i :JavaImport<cr>
autocmd FileType java nnoremap <silent><buffer><leader>i :JavaImportMissing<cr>
autocmd FileType java nnoremap <silent><buffer><leader>fd :JavaSearch<cr>
autocmd FileType java nnoremap <silent><buffer><leader>au :Ant<space>upload<cr>
autocmd FileType java nnoremap <silent><buffer><leader>ab :Ant<space>build<cr>
autocmd FileType java nnoremap <silent><buffer><leader>ar :Ant<space>run<cr>
" autocmd FileType java nnoremap <silent><buffer><leader>jc :!javac<space>%<cr>
" autocmd FileType java nnoremap <silent><buffer><leader>jr :!java<space>%:t:r<cr>
autocmd FileType java nnoremap <silent><buffer><leader>jc :Javac<cr>
autocmd FileType java nnoremap <silent><buffer><leader>jr :Java<cr>
autocmd FileType java nnoremap <silent><buffer><leader>jf :JavaFormat<cr>
autocmd FileType java nnoremap <silent><buffer><leader>t :ProjectTree<cr>
autocmd FileType java nnoremap <silent><buffer><cr> :JavaSearchContext<cr>
autocmd FileType java nnoremap <silent><buffer><leader>f :lne<cr>
autocmd FileType java nnoremap <silent><buffer><leader>g :ll<cr>
autocmd FileType java nnoremap <silent><buffer><leader>e :lli<cr>
autocmd FileType java set tags=.tags;/ 
autocmd FileType java set foldmethod=indent
autocmd FileType java set foldlevel=1
autocmd FileType java set updatetime=500
" autocmd FileType java let g:SuperTabDefaultCompletionType = "<c-x><c-u>"
" autocmd FileType java inoremap {      {}<Left>
" autocmd FileType java inoremap {<CR>  {<CR>}<Esc>O
" autocmd FileType java inoremap {{     {
" autocmd FileType java inoremap {}     {}
" autocmd FileType java inoremap (      ()<Left>

autocmd FileType tex TTarget pdf
" autocmd FileType tex set foldmethod=marker
" autocmd BufRead *.tex set foldmethod=marker
" autocmd FileType tex set foldmarker=<<<,>>>
" autocmd BufRead *tex set foldmarker=<<<,>>>
autocmd FileType tex let g:Tex_DefaultTargetFormat = 'pdf'

" autocmd FileType tex let g:Tex_FormatDependency_pdf = 'dvi,ps,pdf'
" autocmd FileType tex let g:Tex_CompileRule_dvi = 'latex --interaction=nonstopmode $*'
" autocmd FileType tex let g:Tex_CompileRule_ps = 'dvips -Ppdf -o $*.ps $*.dvi'
" autocmd FileType tex let g:Tex_CompileRule_pdf = 'ps2pdf $*.ps'

autocmd FileType tex let g:Tex_MultipleCompileFormats = 'dvi,pdf'
autocmd FileType tex let g:Tex_ViewRuleComplete_pdf = 'evince $*.pdf &'

" autocmd FileType tex let g:Tex_IgnoredWarnings = g:Tex_IgnoredWarnings . "\ncontains only floats"
autocmd FileType tex let g:Tex_IgnoredWarnings = "Underfull\n".
			\"Overfull\n".
			\"specifier changed to\n".
			\"You have requested\n".
			\"Missing number, treated as zero.\n".
			\"There were undefined references\n".
			\"Citation %.%# undefined\n".
			\"contains only floats"
autocmd FileType tex let g:Tex_IgnoreLevel = 8

autocmd FileType tex set winaltkeys=no
autocmd FileType tex set cmdheight=2

autocmd FileType tex let g:Tex_FoldedSections = 'part,chapter,nextprob,nextprobhere,section,%%fakesection,subsection,subsubsection,paragraph'
autocmd FileType tex let g:Tex_Leader = ',,'
autocmd FileType tex let g:Tex_Leader2 = '`'

" autocmd FileType tex let g:Tex_Env_align = "\\begin{align*}\<CR><++>\<CR>\\end{align*}"
" autocmd FileType tex let g:Tex_Env_figure = "\\begin{figure}[<+htpb+>]\<CR>\\centering\<CR>\\includegraphics{<+figure+>}\<CR>\\caption{<+caption+>}\<CR>\\end{figure}<++>"
autocmd FileType tex let g:Tex_Env_figure = "\\begin{figure}[!htpb]\<CR>\\centering\<CR>\\includegraphics[width=<+width+>in]{<+figure+>}\<CR>\\caption{<+caption+>}\<CR>\\label{fig:<+label+>}\<CR>\\end{figure}"
autocmd FileType tex call IMAP('EAL', "\\begin{align*}\<CR><++>\<CR>\\end{align*}", 'tex')
autocmd FileType tex call IMAP('/bo', "_{<++>}^{<++>}<++>", 'tex')

"To make things silent, call :silent [command]


" set runtimepath+=/usr/share/lilypond/2.10.33/vim/

au BufNewFile,BufRead *.cu set ft=cu

" OPTIONAL: Starting with Vim 7, the filetype of empty .tex files defaults to
" 'plaintex' instead of 'tex', which results in vim-latex not being loaded.
" The following changes the default filetype back to 'tex':
let g:tex_flavor='latex'
